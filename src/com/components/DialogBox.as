package com.components{		import com.greensock.TweenMax;	import com.greensock.easing.*;	import com.utils.FX;	import com.utils.InterfaceEvent;	import com.utils.ResizeUtil;	import com.molydeux.PlayerModel;	import com.molydeux.BabyModel;		import flash.display.*;	import flash.events.*;	import flash.net.*;	import flash.text.*;		import com.molydeux.GameModel;		public class DialogBox extends MovieClip{						//		private var _stage:Stage;		//				//		private var dialogShowPos:int = 150;		private var dialogHidePos:int = 800;		private var dialogPadding:int = 20;		//		private var headerFormat:TextFormat = new TextFormat(); 		private var bodyFormat:TextFormat = new TextFormat(); 		//		private var theFx:FX = new FX();		// init objs		public var content:MovieClip;		// 		public var blocker:MovieClip;				private var theTextID:int = 1;		//		/// fix focus issues		public var removeMenuFocus:Event = new Event('removeMenuFocus');						public function DialogBox(){			// trace("Hello Dialog Box");			initContent();								}		private function initContent():void{			trace("init dialog box");			_stage = ResizeUtil.getInstance().stage;			blocker = new blocker_mc();			this.addChild(blocker);			blocker.x = 0;			blocker.y = 0;			blocker.visible = false;			content = new DialogContent();						this.addChild(content);			content.x = 1024/2 - content.width/2; // _stage.width/2 - content.width/2;			content.gotoAndStop(1);			initBoxParams();						headerFormat.color = 0x990000; 			content.headerTxt.autoSize =  TextFieldAutoSize.CENTER ;			content.headerTxt.setTextFormat(headerFormat);			bodyFormat.color = 0x000000; 			content.bodyTxt.autoSize =  TextFieldAutoSize.CENTER ;			content.bodyTxt.setTextFormat(bodyFormat);						content.closeButt.gotoAndStop(1);									content.y = dialogHidePos;						// add player model			// player = Player.getInstance();					}				private function initBoxParams():void{						content.closeButt.addEventListener(MouseEvent.CLICK, hideDialog);			content.closeButt.addEventListener(MouseEvent.MOUSE_OVER, theRollOver);			content.closeButt.addEventListener(MouseEvent.MOUSE_OUT, theRollOut);			content.closeButt.mouseChildren = false;			content.closeButt.buttonMode = true;			//			content.restartButt.addEventListener(MouseEvent.CLICK,initRestart);			content.restartButt.addEventListener(MouseEvent.MOUSE_OVER, theRollOver);			content.restartButt.addEventListener(MouseEvent.MOUSE_OUT, theRollOut);			content.restartButt.mouseChildren = false;			content.restartButt.buttonMode = true;						content.nextLevelButt.addEventListener(MouseEvent.CLICK,doNextLevel);			content.nextLevelButt.addEventListener(MouseEvent.MOUSE_OVER, theRollOver);			content.nextLevelButt.addEventListener(MouseEvent.MOUSE_OUT, theRollOut);			content.nextLevelButt.mouseChildren = false;			content.nextLevelButt.buttonMode = true;						content.restartButt.visible = false;									content.gfxMC.visible = false;			content.restartButt.visible = false;			content.nextLevelButt.visible = false;					}		public function displayContent(headerText:String, bodyText:String):void{						content.gfxMC.visible = false;			content.headerTxt.text = headerText;			content.bodyTxt.text = bodyText;			content.gfxMC.visible = true;			content.bodyTxt.y = content.headerTxt.y + content.headerTxt.height; /// position body text			content.gfxMC.y = content.bodyTxt.y + content.bodyTxt.height + dialogPadding; /// position coupon			content.nextLevelButt.y = content.gfxMC.y + content.gfxMC.height + dialogPadding; /// position button			content.boxBG.height = content.nextLevelButt.y + content.nextLevelButt.height + dialogPadding; /// resize background			content.closeButt.buttonMode = true;			content.closeButt.visible = true;						showDialog();		}				//////////////////////////		///// DISPLAY WIN ///////		///// if you've not got the total levels		//// displays level complete content instead		public function displayWinContent():void{			content.headerTxt.text = "";			content.bodyTxt.text = "";			/// text for unlocking the coupon			/*			if(GameModel.hasAlreadyPlayed == false){				content.headerTxt.text = "You collected all items and avoided the hazards of the sea. Congrats.";				content.bodyTxt.appendText("\n" + "\n" + "Click on a coupon to download and print your reward.");				content.gfxMC.addEventListener(MouseEvent.CLICK, printCoupon);				content.gfxMC.gotoAndStop("coupon");				content.gfxMC.buttonMode = true;			} else {							}			*/												if(PlayerModel.hasWon == true){				content.gfxMC.gotoAndStop("win"); // this shows no gfx				content.gfxMC.buttonMode = false;				content.headerTxt.text = "You have Won!";				content.bodyTxt.text="Your time bonus is " + "!";				content.bodyTxt.appendText("\n " + "You have Shaken the baby " + BabyModel.numShakes + " times!");								content.nextLevelButt.visible = false;				content.restartButt.visible = true;				content.closeButt.visible = false;				content.gfxMC.alpha = 1;							} else {				content.gfxMC.gotoAndStop("goal"); // this shows no gfx				content.gfxMC.buttonMode = false;				content.headerTxt.text = "You have Reached Your Goal!";				content.bodyTxt.text = "Your time bonus is " + "!";				content.bodyTxt.appendText("\n " + "You have Shaken the baby " + BabyModel.numShakes + " times!");								content.nextLevelButt.visible = true;				content.restartButt.visible = false;				content.closeButt.visible = false;				content.gfxMC.alpha = 1;			}			/// do positioning			content.gfxMC.visible = true;			content.bodyTxt.y = content.headerTxt.y + content.headerTxt.height; /// position body text			content.gfxMC.y = content.bodyTxt.y + content.bodyTxt.height + dialogPadding; /// position coupon			content.nextLevelButt.y = content.gfxMC.y + content.gfxMC.height + dialogPadding; /// position button			content.restartButt.y = content.gfxMC.y + content.gfxMC.height + dialogPadding; /// position button			content.boxBG.height = content.nextLevelButt.y + content.nextLevelButt.height + dialogPadding; /// resize background									showDialog();		}				public function displayLoseContent():void{			content.headerTxt.text = "";			content.bodyTxt.text = "";			content.headerTxt.text = "Game Over!!!";			content.bodyTxt.text = "You have Lost!";			content.bodyTxt.appendText("\n " + "You have Shaken the baby " + BabyModel.numShakes + " times!");			content.gfxMC.gotoAndStop("lose");			/*			content.gfxMC.visible = true;			content.fbButt.visible = false;			content.bodyTxt.y = content.headerTxt.y + content.headerTxt.height; /// position body text			content.gfxMC.y = content.bodyTxt.y + content.bodyTxt.height + dialogPadding;; // position gfx			content.restartButt.y = content.gfxMC.y + content.gfxMC.height + dialogPadding; /// position button			content.boxBG.height = content.restartButt.y + content.restartButt.height + dialogPadding; /// resize background			content.restartButt.visible = true;			content.nextLevelButt.visible = false;			content.closeButt.visible = false;			content.gfxMC.alpha = 1;			*/			///*			content.gfxMC.visible = true;			content.bodyTxt.y = content.headerTxt.y + content.headerTxt.height; /// position body text			content.gfxMC.y = content.bodyTxt.y + content.bodyTxt.height + dialogPadding;; // position gfx			content.restartButt.y = content.gfxMC.y + content.gfxMC.height + dialogPadding; /// position button			content.boxBG.height = content.restartButt.y + content.restartButt.height + dialogPadding; /// resize background			content.restartButt.visible = true;			content.nextLevelButt.visible = false;			content.closeButt.visible = false;			content.gfxMC.alpha = .5;			//*/						showDialog();		}				public function displaySecretContent():void{			content.headerTxt.text = "You have Unlocked a Secret";			content.bodyTxt.text = "";			content.bodyTxt.text = "She ended up at clown school, against your advice.";			content.gfxMC.gotoAndStop("lose");			///*			content.gfxMC.visible = true;			content.bodyTxt.y = content.headerTxt.y + content.headerTxt.height; /// position body text			// content.gfxMC.y = content.bodyTxt.y + content.bodyTxt.height + dialogPadding;; // position gfx			content.restartButt.y = content.bodyTxt.y + content.bodyTxt.height + dialogPadding; /// position button			content.boxBG.height = content.restartButt.y + content.restartButt.height + dialogPadding; /// resize background			content.restartButt.visible = false;			content.nextLevelButt.visible = false;			content.closeButt.visible = true;			content.gfxMC.visible = false;			//*/						showDialog();		}								public function showDialog():void{			dispatchEvent(new InterfaceEvent("pause"));			blocker.alpha = 0;			blocker.visible = true;			TweenMax.to(blocker, .175,{alpha:1, ease:Sine.easeIn}); 			dispatchEvent(new InterfaceEvent("pause"));			this.visible = true;			TweenMax.to(content, .25,{y:768/2-content.height/2, ease:Sine.easeIn}); 		}				public function hideDialog(e:Event):void{						/// check to see if this is the initial dialog box			/// if so, run game start			if(GameModel.hasPlayed == false){				dispatchEvent(new InterfaceEvent("gameStart"));			}			dispatchEvent(new InterfaceEvent("unpause"));			TweenMax.to(blocker, .175,{alpha:0, ease:Sine.easeIn}); 			dispatchEvent(new InterfaceEvent("unpause"));			dispatchEvent(removeMenuFocus);			TweenMax.to(content, .25,{y:dialogHidePos, ease:Sine.easeIn, onComplete:makeInvisible}); 			function makeInvisible():void{				this.visible = false;				blocker.visible = false;			}						// content.gfxMC.removeEventListener(MouseEvent.CLICK, printCoupon);		}				//		private function initRestart(e:Event):void{			hideDialog(null);			dispatchEvent(new InterfaceEvent("doRestart"));					}		private function doNextLevel(e:Event):void{			dispatchEvent(new InterfaceEvent("doNextLevel"));					}				//// FX		public function theRollOver(e:Event):void{			theFx.rollOverFx(e.target);					}		public function theRollOut(e:Event):void{			theFx.rollOutFx(e.target);					}								/// end constructor	}	//// end package}