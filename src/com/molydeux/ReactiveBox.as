package com.molydeux {		//import the GreenSock classes	import com.greensock.*;	import com.greensock.easing.*;		import com.utils.InterfaceEvent;	import com.utils.ResizeUtil;	import wck.Avatar;	import wck.World;	import wck.BabyProfile;	import flash.filters.GlowFilter;			public class ReactiveBox extends Box{				private var _levelOfReactivity:Boolean;		private var _tween:TweenLite;		private var _glow:GlowFilter;		public function ReactiveBox() {			stop();			_levelOfReactivity = false;		}				public function increaseReactivity():void {			if (_levelOfReactivity) {				return;			}			gotoAndStop(currentFrame + 1);			updateSizeHandler(null);			_levelOfReactivity = true;						stage.addEventListener(InterfaceEvent.SHAKEBABY, updateSizeHandler);		}				public function removeReactivity():void {						stage.removeEventListener(InterfaceEvent.SHAKEBABY, updateSizeHandler);		}				private function updateSizeHandler(event:InterfaceEvent):void {			var baby:int = 6 - BabyModel.babyHealth;						if (_glow == null) {				_glow = new GlowFilter(0x00FF00, 1, 1, 1);				_tween = new TweenLite(_glow, 2, {blurX:baby*20, blurY:baby*20});			} else {				if (baby*20 > _glow.blurX) {					_tween = new TweenLite(_glow, 2, {blurX:baby*20, blurY:baby*20});				}			}			this.filters=[_glow];						if (BabyModel.babyHealth == 2) {				trace("remove");				gotoAndStop(currentFrame + 1);				removeReactivity();			}					}				public function isReactive():Boolean {			return _levelOfReactivity; 		}				public function get levelOfReactivity():Boolean {			return _levelOfReactivity;		}		public override function destroy():void {			super.destroy();						stage.removeEventListener(InterfaceEvent.SHAKEBABY, updateSizeHandler);		}	}	}